package main

import "fmt"

/*
Реализовать быструю сортировку массива (quicksort) встроенными методами языка.

Решение:
Алгоритм быстрой сортировки в худшем O(n^2), в среднем O(n*log n)
Идея:
исходный массив разбивается на две части, где в первой части массива элементы такие,
что все элементы из первой части массива меньше или равны последнемоу элементу массива первой части
Во второй части массива все элементы равны либо больше всех элементов первой части массива.

Полученные части массива сортируются рекурсивно аналогичным способом,
то есть до сортировки подмассива из двух элементов.

Разбиение массива:

Определяем разделяющий элемент, который стоит посередине данного массива(или подмассива).
Далее начинается просмотр с левого конца массива,
который продолжается до тех пор,
пока не будет найден элемент, превосходящий по значению разделяющий элемент, затем выполняется просмотр,
начиная с правого конца массива, который продолжается до тех пор, пока не отыскивается элемент,
который по значению меньше разделяющего. Оба элемента, на которых просмотр был прерван, очевидно,
находятся не на своих местах в разделенном массиве, и потому они меняются местами.
ак продолжаем дальше, пока не убедимся в том, что слева от левого указателя не осталось ни одного элемента,
который был бы больше по значению разделяющего, и ни одного элемента справа от правого указателя,
которые были бы меньше по значению разделяющего элемента.

Переменная v сохраняет значение разделяющего элемента a[(l+r)/2], a l и r представляет собой,
соответственно, указатели левого и правого просмотра. Цикл разделения увеличивает значение l
 и уменьшает значение r на 1, причем условие, что ни один элемент слева от l
 не больше v
 и ни один элемент справа от r не меньше v, не нарушается.
Как только значения указателей пересекаются, процедура разбиения завершается.
*/

func quicksort(a []int, l int, r int) {
	if l < r {
		q := partition(a, l, r)
		quicksort(a, l, q)
		quicksort(a, q+1, r)
	}
	return
}

func partition(a []int, l, r int) int {
	v := a[(l+r)/2]
	for l <= r {
		for a[l] < v {
			l++
		}
		for a[r] > v {
			r--
		}
		if l >= r {
			break
		}
		a[l], a[r] = a[r], a[l]
		l++
		r--
	}
	return r
}

func main() {
	arr := []int{3, 9, 1, 5, 13, 9, 5, 3, 4, 2, 1, 9, 0, 29, 100, 74}
	quicksort(arr, 0, len(arr)-1)
	fmt.Println(arr)
}
