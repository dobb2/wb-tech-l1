package main

import (
	"fmt"
	"github.com/dobb2/wb-tech-l1/tasks/24/Point"
)

/*
Разработать программу нахождения расстояния между двумя точками,
которые представлены в виде структуры Point с инкапсулированными параметрами x,y и конструктором.

x, y типа float64

Решение:
1) Инкапсулирование параметров
Go инкапсулирует вещи на уровне пакета. Имена, начинающиеся со строчной буквы, видны только внутри этого пакета.
Поэтому параметры x, y не с загланвой буквы объявляем в структуре.
Так как структуры в го не имеют конструкторов, то создаем функцию New, которая возвращает экземпляр нужного типа
(в нашей задачи экземпляр с нужными значениями x и y), в зависимости от переданных параметров(паттерн фабрика).


Фабричная функция(метод) - порождающий шаблон проектирования,
предоставляющий подклассам (дочерним классам, субклассам) интерфейс для создания экземпляров некоторого класса.
В момент создания наследники могут определить, какой класс создавать.
Иными словами, данный шаблон делегирует создание объектов наследникам родительского класса.
Это позволяет использовать в коде программы не конкретные классы,
а манипулировать абстрактными объектами на более высоком уровне.

*/

func main() {
	point1 := Point.New(2, 2)
	point2 := Point.New(1, 1)

	fmt.Println(point1.Distance(point2))

}
